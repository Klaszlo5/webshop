version: '3.8'

services:
  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"  # Exposes frontend on port 3000
    networks:
      - webshop_network
    depends_on:
      - backend  # Wait for the backend to be up before starting the frontend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"  # Exposes backend on port 3001
    environment:
      - DATABASE_URL=postgres://webshop_user:webshop_password@postgres:5432/webshop  # Database connection URL
    networks:
      - webshop_network
    depends_on:
      - postgres  # Wait for the database to be up before starting the backend

  # PostgreSQL database service
  postgres:
    image: postgres:latest
    container_name: webshop-db
    environment:
      POSTGRES_DB: webshop
      POSTGRES_USER: webshop_user
      POSTGRES_PASSWORD: webshop_password
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql  # Initialize DB with init.sql
    ports:
      - "5432:5432"
    networks:
      - webshop_network

networks:
  webshop_network:
    driver: bridge